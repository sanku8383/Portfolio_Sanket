{"ast":null,"code":"var _span;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\n\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    ...theme.typography.caption,\n    textAlign: 'left',\n    marginTop: 3,\n    marginRight: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    [`&.${formHelperTextClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    },\n    [`&.${formHelperTextClasses.error}`]: {\n      color: (theme.vars || theme).palette.error.main\n    },\n    ...(ownerState.size === 'small' && {\n      marginTop: 4\n    }),\n    ...(ownerState.contained && {\n      marginLeft: 14,\n      marginRight: 14\n    })\n  };\n});\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n  const {\n    children,\n    className,\n    component = 'p',\n    disabled,\n    error,\n    filled,\n    focused,\n    margin,\n    required,\n    variant,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  const ownerState = { ...props,\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    children: children === ' ' ? // notranslate needed while Google Translate will not fix zero-width space issue\n    _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n      className: \"notranslate\",\n      children: \"\\u200B\"\n    })) : children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default FormHelperText;","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/material/FormHelperText/FormHelperText.js"],"names":["_span","React","PropTypes","clsx","unstable_composeClasses","composeClasses","formControlState","useFormControl","styled","capitalize","formHelperTextClasses","getFormHelperTextUtilityClasses","useThemeProps","jsx","_jsx","useUtilityClasses","ownerState","classes","contained","size","disabled","error","filled","focused","required","slots","root","FormHelperTextRoot","name","slot","overridesResolver","props","styles","theme","color","vars","palette","text","secondary","typography","caption","textAlign","marginTop","marginRight","marginBottom","marginLeft","main","FormHelperText","forwardRef","inProps","ref","children","className","component","margin","variant","other","muiFormControl","fcs","states","as","process","env","NODE_ENV","propTypes","node","object","string","elementType","bool","oneOf","sx","oneOfType","arrayOf","func"],"mappings":"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","sourcesContent":["var _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport formHelperTextClasses, { getFormHelperTextUtilityClasses } from './formHelperTextClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    contained,\n    size,\n    disabled,\n    error,\n    filled,\n    focused,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', error && 'error', size && `size${capitalize(size)}`, contained && 'contained', focused && 'focused', filled && 'filled', required && 'required']\n  };\n  return composeClasses(slots, getFormHelperTextUtilityClasses, classes);\n};\nconst FormHelperTextRoot = styled('p', {\n  name: 'MuiFormHelperText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size && styles[`size${capitalize(ownerState.size)}`], ownerState.contained && styles.contained, ownerState.filled && styles.filled];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  ...theme.typography.caption,\n  textAlign: 'left',\n  marginTop: 3,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n  [`&.${formHelperTextClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${formHelperTextClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  },\n  ...(ownerState.size === 'small' && {\n    marginTop: 4\n  }),\n  ...(ownerState.contained && {\n    marginLeft: 14,\n    marginRight: 14\n  })\n}));\nconst FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormHelperText'\n  });\n  const {\n    children,\n    className,\n    component = 'p',\n    disabled,\n    error,\n    filled,\n    focused,\n    margin,\n    required,\n    variant,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant', 'size', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  const ownerState = {\n    ...props,\n    component,\n    contained: fcs.variant === 'filled' || fcs.variant === 'outlined',\n    variant: fcs.variant,\n    size: fcs.size,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormHelperTextRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    children: children === ' ' ? // notranslate needed while Google Translate will not fix zero-width space issue\n    _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n      className: \"notranslate\",\n      children: \"\\u200B\"\n    })) : children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default FormHelperText;"]},"metadata":{},"sourceType":"module"}