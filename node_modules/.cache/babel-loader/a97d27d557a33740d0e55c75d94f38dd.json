{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport useBadge from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(_ref3 => {\n  let {\n    theme,\n    ownerState\n  } = _ref3;\n  return {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    ...(ownerState.color !== 'default' && {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n      color: (theme.vars || theme).palette[ownerState.color].contrastText\n    }),\n    ...(ownerState.variant === 'dot' && {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }),\n    ...(ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }),\n    ...(ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }),\n    ...(ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }),\n    ...(ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }),\n    ...(ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }),\n    ...(ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }),\n    ...(ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }),\n    ...(ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }),\n    ...(ownerState.invisible && {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    })\n  };\n});\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = { ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState); // support both `slots` and `components` for backward compatibility\n\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, { ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, { ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/material/Badge/Badge.js"],"names":["React","PropTypes","clsx","usePreviousProps","composeClasses","useBadge","useSlotProps","styled","useThemeProps","capitalize","badgeClasses","getBadgeUtilityClass","jsx","_jsx","jsxs","_jsxs","RADIUS_STANDARD","RADIUS_DOT","useUtilityClasses","ownerState","color","anchorOrigin","invisible","overlap","variant","classes","slots","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","position","display","verticalAlign","flexShrink","BadgeBadge","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","top","right","transform","transformOrigin","bottom","left","leavingScreen","Badge","forwardRef","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","anchorOriginProp","className","classesProp","component","components","componentsProps","children","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slotProps","showZero","variantProp","other","invisibleFromHook","displayValue","displayValueFromHook","prevProps","undefined","RootSlot","Root","BadgeSlot","rootSlotProps","badgeSlotProps","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","badgeProps","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","object","string","oneOfType","func","bool","number","sx","arrayOf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport useBadge from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  ...(ownerState.color !== 'default' && {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n    color: (theme.vars || theme).palette[ownerState.color].contrastText\n  }),\n  ...(ownerState.variant === 'dot' && {\n    borderRadius: RADIUS_DOT,\n    height: RADIUS_DOT * 2,\n    minWidth: RADIUS_DOT * 2,\n    padding: 0\n  }),\n  ...(ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n    top: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  }),\n  ...(ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n    bottom: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  }),\n  ...(ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n    top: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  }),\n  ...(ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n    bottom: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  }),\n  ...(ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n    top: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  }),\n  ...(ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n    bottom: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  }),\n  ...(ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n    top: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  }),\n  ...(ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n    bottom: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    [`&.${badgeClasses.invisible}`]: {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  }),\n  ...(ownerState.invisible && {\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;"]},"metadata":{},"sourceType":"module"}