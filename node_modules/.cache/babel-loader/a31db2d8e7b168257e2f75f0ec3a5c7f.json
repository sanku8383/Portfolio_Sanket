{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div')(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1,\n    ...(ownerState.anchor === 'left' && {\n      right: 'auto'\n    }),\n    ...(ownerState.anchor === 'right' && {\n      left: 'auto',\n      right: 0\n    }),\n    ...(ownerState.anchor === 'top' && {\n      bottom: 'auto',\n      right: 0\n    }),\n    ...(ownerState.anchor === 'bottom' && {\n      top: 'auto',\n      bottom: 0,\n      right: 0\n    })\n  };\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style,\n    ...other\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, {\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width,\n      ...style\n    },\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/material/SwipeableDrawer/SwipeArea.js"],"names":["React","PropTypes","clsx","styled","capitalize","isHorizontal","jsx","_jsx","SwipeAreaRoot","theme","ownerState","position","top","left","bottom","zIndex","drawer","anchor","right","SwipeArea","forwardRef","props","ref","classes","className","width","style","other","root","process","env","NODE_ENV","propTypes","oneOf","isRequired","object","string","number"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport styled from '../styles/styled';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div')(({\n  theme,\n  ownerState\n}) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  zIndex: theme.zIndex.drawer - 1,\n  ...(ownerState.anchor === 'left' && {\n    right: 'auto'\n  }),\n  ...(ownerState.anchor === 'right' && {\n    left: 'auto',\n    right: 0\n  }),\n  ...(ownerState.anchor === 'top' && {\n    bottom: 'auto',\n    right: 0\n  }),\n  ...(ownerState.anchor === 'bottom' && {\n    top: 'auto',\n    bottom: 0,\n    right: 0\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style,\n    ...other\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, {\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width,\n      ...style\n    },\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;"]},"metadata":{},"sourceType":"module"}