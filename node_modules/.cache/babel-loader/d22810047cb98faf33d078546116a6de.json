{"ast":null,"code":"// @inheritedComponent Tooltip\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Fab from '../Fab';\nimport Tooltip from '../Tooltip';\nimport capitalize from '../utils/capitalize';\nimport speedDialActionClasses, { getSpeedDialActionUtilityClass } from './speedDialActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    tooltipPlacement,\n    classes\n  } = ownerState;\n  const slots = {\n    fab: ['fab', !open && 'fabClosed'],\n    staticTooltip: ['staticTooltip', `tooltipPlacement${capitalize(tooltipPlacement)}`, !open && 'staticTooltipClosed'],\n    staticTooltipLabel: ['staticTooltipLabel']\n  };\n  return composeClasses(slots, getSpeedDialActionUtilityClass, classes);\n};\n\nconst SpeedDialActionFab = styled(Fab, {\n  name: 'MuiSpeedDialAction',\n  slot: 'Fab',\n  skipVariantsResolver: false,\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.fab, !ownerState.open && styles.fabClosed];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return {\n    margin: 8,\n    color: (theme.vars || theme).palette.text.secondary,\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    '&:hover': {\n      backgroundColor: theme.vars ? theme.vars.palette.SpeedDialAction.fabHoverBg : emphasize(theme.palette.background.paper, 0.15)\n    },\n    transition: `${theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shorter\n    })}, opacity 0.8s`,\n    opacity: 1,\n    ...(!ownerState.open && {\n      opacity: 0,\n      transform: 'scale(0)'\n    })\n  };\n});\nconst SpeedDialActionStaticTooltip = styled('span', {\n  name: 'MuiSpeedDialAction',\n  slot: 'StaticTooltip',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.staticTooltip, !ownerState.open && styles.staticTooltipClosed, styles[`tooltipPlacement${capitalize(ownerState.tooltipPlacement)}`]];\n  }\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    [`& .${speedDialActionClasses.staticTooltipLabel}`]: {\n      transition: theme.transitions.create(['transform', 'opacity'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      opacity: 1,\n      ...(!ownerState.open && {\n        opacity: 0,\n        transform: 'scale(0.5)'\n      }),\n      ...(ownerState.tooltipPlacement === 'left' && {\n        transformOrigin: '100% 50%',\n        right: '100%',\n        marginRight: 8\n      }),\n      ...(ownerState.tooltipPlacement === 'right' && {\n        transformOrigin: '0% 50%',\n        left: '100%',\n        marginLeft: 8\n      })\n    }\n  };\n});\nconst SpeedDialActionStaticTooltipLabel = styled('span', {\n  name: 'MuiSpeedDialAction',\n  slot: 'StaticTooltipLabel',\n  overridesResolver: (props, styles) => styles.staticTooltipLabel\n})(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    position: 'absolute',\n    ...theme.typography.body1,\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    boxShadow: (theme.vars || theme).shadows[1],\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '4px 16px',\n    wordBreak: 'keep-all'\n  };\n});\nconst SpeedDialAction = /*#__PURE__*/React.forwardRef(function SpeedDialAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSpeedDialAction'\n  });\n  const {\n    className,\n    delay = 0,\n    FabProps = {},\n    icon,\n    id,\n    open,\n    TooltipClasses,\n    tooltipOpen: tooltipOpenProp = false,\n    tooltipPlacement = 'left',\n    tooltipTitle,\n    ...other\n  } = props;\n  const ownerState = { ...props,\n    tooltipPlacement\n  };\n  const classes = useUtilityClasses(ownerState);\n  const [tooltipOpen, setTooltipOpen] = React.useState(tooltipOpenProp);\n\n  const handleTooltipClose = () => {\n    setTooltipOpen(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setTooltipOpen(true);\n  };\n\n  const transitionStyle = {\n    transitionDelay: `${delay}ms`\n  };\n\n  const fab = /*#__PURE__*/_jsx(SpeedDialActionFab, {\n    size: \"small\",\n    className: clsx(classes.fab, className),\n    tabIndex: -1,\n    role: \"menuitem\",\n    ownerState: ownerState,\n    ...FabProps,\n    style: { ...transitionStyle,\n      ...FabProps.style\n    },\n    children: icon\n  });\n\n  if (tooltipOpenProp) {\n    return /*#__PURE__*/_jsxs(SpeedDialActionStaticTooltip, {\n      id: id,\n      ref: ref,\n      className: classes.staticTooltip,\n      ownerState: ownerState,\n      ...other,\n      children: [/*#__PURE__*/_jsx(SpeedDialActionStaticTooltipLabel, {\n        style: transitionStyle,\n        id: `${id}-label`,\n        className: classes.staticTooltipLabel,\n        ownerState: ownerState,\n        children: tooltipTitle\n      }), /*#__PURE__*/React.cloneElement(fab, {\n        'aria-labelledby': `${id}-label`\n      })]\n    });\n  }\n\n  if (!open && tooltipOpen) {\n    setTooltipOpen(false);\n  }\n\n  return /*#__PURE__*/_jsx(Tooltip, {\n    id: id,\n    ref: ref,\n    title: tooltipTitle,\n    placement: tooltipPlacement,\n    onClose: handleTooltipClose,\n    onOpen: handleTooltipOpen,\n    open: open && tooltipOpen,\n    classes: TooltipClasses,\n    ...other,\n    children: fab\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialAction.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.\n   * @default 0\n   */\n  delay: PropTypes.number,\n\n  /**\n   * Props applied to the [`Fab`](/material-ui/api/fab/) component.\n   * @default {}\n   */\n  FabProps: PropTypes.object,\n\n  /**\n   * The icon to display in the SpeedDial Fab.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Tooltip`](/material-ui/api/tooltip/) element.\n   */\n  TooltipClasses: PropTypes.object,\n\n  /**\n   * Make the tooltip always visible when the SpeedDial is open.\n   * @default false\n   */\n  tooltipOpen: PropTypes.bool,\n\n  /**\n   * Placement of the tooltip.\n   * @default 'left'\n   */\n  tooltipPlacement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Label to display in the tooltip.\n   */\n  tooltipTitle: PropTypes.node\n} : void 0;\nexport default SpeedDialAction;","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/material/SpeedDialAction/SpeedDialAction.js"],"names":["React","PropTypes","clsx","unstable_composeClasses","composeClasses","emphasize","styled","useThemeProps","Fab","Tooltip","capitalize","speedDialActionClasses","getSpeedDialActionUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","tooltipPlacement","classes","slots","fab","staticTooltip","staticTooltipLabel","SpeedDialActionFab","name","slot","skipVariantsResolver","overridesResolver","props","styles","fabClosed","theme","margin","color","vars","palette","text","secondary","backgroundColor","background","paper","SpeedDialAction","fabHoverBg","transition","transitions","create","duration","shorter","opacity","transform","SpeedDialActionStaticTooltip","staticTooltipClosed","position","display","alignItems","transformOrigin","right","marginRight","left","marginLeft","SpeedDialActionStaticTooltipLabel","typography","body1","borderRadius","shape","boxShadow","shadows","padding","wordBreak","forwardRef","inProps","ref","className","delay","FabProps","icon","id","TooltipClasses","tooltipOpen","tooltipOpenProp","tooltipTitle","other","setTooltipOpen","useState","handleTooltipClose","handleTooltipOpen","transitionStyle","transitionDelay","size","tabIndex","role","style","children","cloneElement","title","placement","onClose","onOpen","process","env","NODE_ENV","propTypes","object","string","number","node","bool","sx","oneOfType","arrayOf","func","oneOf"],"mappings":"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","sourcesContent":["// @inheritedComponent Tooltip\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Fab from '../Fab';\nimport Tooltip from '../Tooltip';\nimport capitalize from '../utils/capitalize';\nimport speedDialActionClasses, { getSpeedDialActionUtilityClass } from './speedDialActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    tooltipPlacement,\n    classes\n  } = ownerState;\n  const slots = {\n    fab: ['fab', !open && 'fabClosed'],\n    staticTooltip: ['staticTooltip', `tooltipPlacement${capitalize(tooltipPlacement)}`, !open && 'staticTooltipClosed'],\n    staticTooltipLabel: ['staticTooltipLabel']\n  };\n  return composeClasses(slots, getSpeedDialActionUtilityClass, classes);\n};\nconst SpeedDialActionFab = styled(Fab, {\n  name: 'MuiSpeedDialAction',\n  slot: 'Fab',\n  skipVariantsResolver: false,\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.fab, !ownerState.open && styles.fabClosed];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  margin: 8,\n  color: (theme.vars || theme).palette.text.secondary,\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  '&:hover': {\n    backgroundColor: theme.vars ? theme.vars.palette.SpeedDialAction.fabHoverBg : emphasize(theme.palette.background.paper, 0.15)\n  },\n  transition: `${theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shorter\n  })}, opacity 0.8s`,\n  opacity: 1,\n  ...(!ownerState.open && {\n    opacity: 0,\n    transform: 'scale(0)'\n  })\n}));\nconst SpeedDialActionStaticTooltip = styled('span', {\n  name: 'MuiSpeedDialAction',\n  slot: 'StaticTooltip',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.staticTooltip, !ownerState.open && styles.staticTooltipClosed, styles[`tooltipPlacement${capitalize(ownerState.tooltipPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  [`& .${speedDialActionClasses.staticTooltipLabel}`]: {\n    transition: theme.transitions.create(['transform', 'opacity'], {\n      duration: theme.transitions.duration.shorter\n    }),\n    opacity: 1,\n    ...(!ownerState.open && {\n      opacity: 0,\n      transform: 'scale(0.5)'\n    }),\n    ...(ownerState.tooltipPlacement === 'left' && {\n      transformOrigin: '100% 50%',\n      right: '100%',\n      marginRight: 8\n    }),\n    ...(ownerState.tooltipPlacement === 'right' && {\n      transformOrigin: '0% 50%',\n      left: '100%',\n      marginLeft: 8\n    })\n  }\n}));\nconst SpeedDialActionStaticTooltipLabel = styled('span', {\n  name: 'MuiSpeedDialAction',\n  slot: 'StaticTooltipLabel',\n  overridesResolver: (props, styles) => styles.staticTooltipLabel\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  ...theme.typography.body1,\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  borderRadius: (theme.vars || theme).shape.borderRadius,\n  boxShadow: (theme.vars || theme).shadows[1],\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '4px 16px',\n  wordBreak: 'keep-all'\n}));\nconst SpeedDialAction = /*#__PURE__*/React.forwardRef(function SpeedDialAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSpeedDialAction'\n  });\n  const {\n    className,\n    delay = 0,\n    FabProps = {},\n    icon,\n    id,\n    open,\n    TooltipClasses,\n    tooltipOpen: tooltipOpenProp = false,\n    tooltipPlacement = 'left',\n    tooltipTitle,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    tooltipPlacement\n  };\n  const classes = useUtilityClasses(ownerState);\n  const [tooltipOpen, setTooltipOpen] = React.useState(tooltipOpenProp);\n  const handleTooltipClose = () => {\n    setTooltipOpen(false);\n  };\n  const handleTooltipOpen = () => {\n    setTooltipOpen(true);\n  };\n  const transitionStyle = {\n    transitionDelay: `${delay}ms`\n  };\n  const fab = /*#__PURE__*/_jsx(SpeedDialActionFab, {\n    size: \"small\",\n    className: clsx(classes.fab, className),\n    tabIndex: -1,\n    role: \"menuitem\",\n    ownerState: ownerState,\n    ...FabProps,\n    style: {\n      ...transitionStyle,\n      ...FabProps.style\n    },\n    children: icon\n  });\n  if (tooltipOpenProp) {\n    return /*#__PURE__*/_jsxs(SpeedDialActionStaticTooltip, {\n      id: id,\n      ref: ref,\n      className: classes.staticTooltip,\n      ownerState: ownerState,\n      ...other,\n      children: [/*#__PURE__*/_jsx(SpeedDialActionStaticTooltipLabel, {\n        style: transitionStyle,\n        id: `${id}-label`,\n        className: classes.staticTooltipLabel,\n        ownerState: ownerState,\n        children: tooltipTitle\n      }), /*#__PURE__*/React.cloneElement(fab, {\n        'aria-labelledby': `${id}-label`\n      })]\n    });\n  }\n  if (!open && tooltipOpen) {\n    setTooltipOpen(false);\n  }\n  return /*#__PURE__*/_jsx(Tooltip, {\n    id: id,\n    ref: ref,\n    title: tooltipTitle,\n    placement: tooltipPlacement,\n    onClose: handleTooltipClose,\n    onOpen: handleTooltipOpen,\n    open: open && tooltipOpen,\n    classes: TooltipClasses,\n    ...other,\n    children: fab\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialAction.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.\n   * @default 0\n   */\n  delay: PropTypes.number,\n  /**\n   * Props applied to the [`Fab`](/material-ui/api/fab/) component.\n   * @default {}\n   */\n  FabProps: PropTypes.object,\n  /**\n   * The icon to display in the SpeedDial Fab.\n   */\n  icon: PropTypes.node,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Tooltip`](/material-ui/api/tooltip/) element.\n   */\n  TooltipClasses: PropTypes.object,\n  /**\n   * Make the tooltip always visible when the SpeedDial is open.\n   * @default false\n   */\n  tooltipOpen: PropTypes.bool,\n  /**\n   * Placement of the tooltip.\n   * @default 'left'\n   */\n  tooltipPlacement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * Label to display in the tooltip.\n   */\n  tooltipTitle: PropTypes.node\n} : void 0;\nexport default SpeedDialAction;"]},"metadata":{},"sourceType":"module"}