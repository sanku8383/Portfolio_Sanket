{"ast":null,"code":"var _span;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NotchedOutlineRoot = styled('fieldset')({\n  textAlign: 'left',\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  top: -5,\n  left: 0,\n  margin: 0,\n  padding: '0 8px',\n  pointerEvents: 'none',\n  borderRadius: 'inherit',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  overflow: 'hidden',\n  minWidth: '0%'\n});\nconst NotchedOutlineLegend = styled('legend')(_ref => {\n  let {\n    ownerState,\n    theme\n  } = _ref;\n  return {\n    float: 'unset',\n    // Fix conflict with bootstrap\n    width: 'auto',\n    // Fix conflict with bootstrap\n    overflow: 'hidden',\n    // Fix Horizontal scroll when label too long\n    ...(!ownerState.withLabel && {\n      padding: 0,\n      lineHeight: '11px',\n      // sync with `height` in `legend` styles\n      transition: theme.transitions.create('width', {\n        duration: 150,\n        easing: theme.transitions.easing.easeOut\n      })\n    }),\n    ...(ownerState.withLabel && {\n      display: 'block',\n      // Fix conflict with normalize.css and sanitize.css\n      padding: 0,\n      height: 11,\n      // sync with `lineHeight` in `legend` styles\n      fontSize: '0.75em',\n      visibility: 'hidden',\n      maxWidth: 0.01,\n      transition: theme.transitions.create('max-width', {\n        duration: 50,\n        easing: theme.transitions.easing.easeOut\n      }),\n      whiteSpace: 'nowrap',\n      '& > span': {\n        paddingLeft: 5,\n        paddingRight: 5,\n        display: 'inline-block',\n        opacity: 0,\n        visibility: 'visible'\n      },\n      ...(ownerState.notched && {\n        maxWidth: '100%',\n        transition: theme.transitions.create('max-width', {\n          duration: 100,\n          easing: theme.transitions.easing.easeOut,\n          delay: 50\n        })\n      })\n    })\n  };\n});\n/**\n * @ignore - internal component.\n */\n\nexport default function NotchedOutline(props) {\n  const {\n    children,\n    classes,\n    className,\n    label,\n    notched,\n    ...other\n  } = props;\n  const withLabel = label != null && label !== '';\n  const ownerState = { ...props,\n    notched,\n    withLabel\n  };\n  return /*#__PURE__*/_jsx(NotchedOutlineRoot, {\n    \"aria-hidden\": true,\n    className: className,\n    ownerState: ownerState,\n    ...other,\n    children: /*#__PURE__*/_jsx(NotchedOutlineLegend, {\n      ownerState: ownerState,\n      children: withLabel ? /*#__PURE__*/_jsx(\"span\", {\n        children: label\n      }) : // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"notranslate\",\n        children: \"\\u200B\"\n      }))\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/material/OutlinedInput/NotchedOutline.js"],"names":["_span","React","PropTypes","styled","jsx","_jsx","NotchedOutlineRoot","textAlign","position","bottom","right","top","left","margin","padding","pointerEvents","borderRadius","borderStyle","borderWidth","overflow","minWidth","NotchedOutlineLegend","ownerState","theme","float","width","withLabel","lineHeight","transition","transitions","create","duration","easing","easeOut","display","height","fontSize","visibility","maxWidth","whiteSpace","paddingLeft","paddingRight","opacity","notched","delay","NotchedOutline","props","children","classes","className","label","other","process","env","NODE_ENV","propTypes","node","object","string","bool","isRequired","style"],"mappings":"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","sourcesContent":["var _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NotchedOutlineRoot = styled('fieldset')({\n  textAlign: 'left',\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  top: -5,\n  left: 0,\n  margin: 0,\n  padding: '0 8px',\n  pointerEvents: 'none',\n  borderRadius: 'inherit',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  overflow: 'hidden',\n  minWidth: '0%'\n});\nconst NotchedOutlineLegend = styled('legend')(({\n  ownerState,\n  theme\n}) => ({\n  float: 'unset',\n  // Fix conflict with bootstrap\n  width: 'auto',\n  // Fix conflict with bootstrap\n  overflow: 'hidden',\n  // Fix Horizontal scroll when label too long\n  ...(!ownerState.withLabel && {\n    padding: 0,\n    lineHeight: '11px',\n    // sync with `height` in `legend` styles\n    transition: theme.transitions.create('width', {\n      duration: 150,\n      easing: theme.transitions.easing.easeOut\n    })\n  }),\n  ...(ownerState.withLabel && {\n    display: 'block',\n    // Fix conflict with normalize.css and sanitize.css\n    padding: 0,\n    height: 11,\n    // sync with `lineHeight` in `legend` styles\n    fontSize: '0.75em',\n    visibility: 'hidden',\n    maxWidth: 0.01,\n    transition: theme.transitions.create('max-width', {\n      duration: 50,\n      easing: theme.transitions.easing.easeOut\n    }),\n    whiteSpace: 'nowrap',\n    '& > span': {\n      paddingLeft: 5,\n      paddingRight: 5,\n      display: 'inline-block',\n      opacity: 0,\n      visibility: 'visible'\n    },\n    ...(ownerState.notched && {\n      maxWidth: '100%',\n      transition: theme.transitions.create('max-width', {\n        duration: 100,\n        easing: theme.transitions.easing.easeOut,\n        delay: 50\n      })\n    })\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nexport default function NotchedOutline(props) {\n  const {\n    children,\n    classes,\n    className,\n    label,\n    notched,\n    ...other\n  } = props;\n  const withLabel = label != null && label !== '';\n  const ownerState = {\n    ...props,\n    notched,\n    withLabel\n  };\n  return /*#__PURE__*/_jsx(NotchedOutlineRoot, {\n    \"aria-hidden\": true,\n    className: className,\n    ownerState: ownerState,\n    ...other,\n    children: /*#__PURE__*/_jsx(NotchedOutlineLegend, {\n      ownerState: ownerState,\n      children: withLabel ? /*#__PURE__*/_jsx(\"span\", {\n        children: label\n      }) : // notranslate needed while Google Translate will not fix zero-width space issue\n      _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n        className: \"notranslate\",\n        children: \"\\u200B\"\n      }))\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;"]},"metadata":{},"sourceType":"module"}