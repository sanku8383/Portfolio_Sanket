{"ast":null,"code":"import { deepmerge } from '@mui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\nimport styleFunctionSx from '../styleFunctionSx/styleFunctionSx';\nimport defaultSxConfig from '../styleFunctionSx/defaultSxConfig';\n\nfunction createTheme() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    breakpoints: breakpointsInput = {},\n    palette: paletteInput = {},\n    spacing: spacingInput,\n    shape: shapeInput = {},\n    ...other\n  } = options;\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge({\n    breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: {\n      mode: 'light',\n      ...paletteInput\n    },\n    spacing,\n    shape: { ...shape,\n      ...shapeInput\n    }\n  }, other);\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n  muiTheme.unstable_sxConfig = { ...defaultSxConfig,\n    ...(other == null ? void 0 : other.unstable_sxConfig)\n  };\n\n  muiTheme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n\n  return muiTheme;\n}\n\nexport default createTheme;","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/system/esm/createTheme/createTheme.js"],"names":["deepmerge","createBreakpoints","shape","createSpacing","styleFunctionSx","defaultSxConfig","createTheme","options","breakpoints","breakpointsInput","palette","paletteInput","spacing","spacingInput","shapeInput","other","muiTheme","direction","components","mode","args","reduce","acc","argument","unstable_sxConfig","unstable_sx","sx","props","theme"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;AACA,SAASC,WAAT,GAA4C;AAAA,MAAvBC,OAAuB,uEAAb,EAAa;AAC1C,QAAM;AACJC,IAAAA,WAAW,EAAEC,gBAAgB,GAAG,EAD5B;AAEJC,IAAAA,OAAO,EAAEC,YAAY,GAAG,EAFpB;AAGJC,IAAAA,OAAO,EAAEC,YAHL;AAIJX,IAAAA,KAAK,EAAEY,UAAU,GAAG,EAJhB;AAKJ,OAAGC;AALC,MAMFR,OANJ;AAOA,QAAMC,WAAW,GAAGP,iBAAiB,CAACQ,gBAAD,CAArC;AACA,QAAMG,OAAO,GAAGT,aAAa,CAACU,YAAD,CAA7B;AACA,MAAIG,QAAQ,GAAGhB,SAAS,CAAC;AACvBQ,IAAAA,WADuB;AAEvBS,IAAAA,SAAS,EAAE,KAFY;AAGvBC,IAAAA,UAAU,EAAE,EAHW;AAIvB;AACAR,IAAAA,OAAO,EAAE;AACPS,MAAAA,IAAI,EAAE,OADC;AAEP,SAAGR;AAFI,KALc;AASvBC,IAAAA,OATuB;AAUvBV,IAAAA,KAAK,EAAE,EACL,GAAGA,KADE;AAEL,SAAGY;AAFE;AAVgB,GAAD,EAcrBC,KAdqB,CAAxB;;AAV0C,oCAANK,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAyB1CJ,EAAAA,QAAQ,GAAGI,IAAI,CAACC,MAAL,CAAY,CAACC,GAAD,EAAMC,QAAN,KAAmBvB,SAAS,CAACsB,GAAD,EAAMC,QAAN,CAAxC,EAAyDP,QAAzD,CAAX;AACAA,EAAAA,QAAQ,CAACQ,iBAAT,GAA6B,EAC3B,GAAGnB,eADwB;AAE3B,QAAIU,KAAK,IAAI,IAAT,GAAgB,KAAK,CAArB,GAAyBA,KAAK,CAACS,iBAAnC;AAF2B,GAA7B;;AAIAR,EAAAA,QAAQ,CAACS,WAAT,GAAuB,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AACxC,WAAOvB,eAAe,CAAC;AACrBsB,MAAAA,EAAE,EAAEC,KADiB;AAErBC,MAAAA,KAAK,EAAE;AAFc,KAAD,CAAtB;AAID,GALD;;AAMA,SAAOZ,QAAP;AACD;;AACD,eAAeV,WAAf","sourcesContent":["import { deepmerge } from '@mui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\nimport styleFunctionSx from '../styleFunctionSx/styleFunctionSx';\nimport defaultSxConfig from '../styleFunctionSx/defaultSxConfig';\nfunction createTheme(options = {}, ...args) {\n  const {\n    breakpoints: breakpointsInput = {},\n    palette: paletteInput = {},\n    spacing: spacingInput,\n    shape: shapeInput = {},\n    ...other\n  } = options;\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge({\n    breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: {\n      mode: 'light',\n      ...paletteInput\n    },\n    spacing,\n    shape: {\n      ...shape,\n      ...shapeInput\n    }\n  }, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n  muiTheme.unstable_sxConfig = {\n    ...defaultSxConfig,\n    ...(other == null ? void 0 : other.unstable_sxConfig)\n  };\n  muiTheme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n  return muiTheme;\n}\nexport default createTheme;"]},"metadata":{},"sourceType":"module"}