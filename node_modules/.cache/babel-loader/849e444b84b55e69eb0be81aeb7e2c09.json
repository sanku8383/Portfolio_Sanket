{"ast":null,"code":"var _ClearIcon, _ArrowDropDownIcon;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(_ref => {\n  let {\n    ownerState\n  } = _ref;\n  return {\n    [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    },\n\n    /* Avoid double tap issue on iOS */\n    '@media (pointer: fine)': {\n      [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n        visibility: 'visible'\n      }\n    },\n    ...(ownerState.fullWidth && {\n      width: '100%'\n    }),\n    [`& .${autocompleteClasses.tag}`]: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)',\n      ...(ownerState.size === 'small' && {\n        margin: 2,\n        maxWidth: 'calc(100% - 4px)'\n      })\n    },\n    [`& .${autocompleteClasses.inputRoot}`]: {\n      flexWrap: 'wrap',\n      [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 26 + 4\n      },\n      [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 52 + 4\n      },\n      [`& .${autocompleteClasses.input}`]: {\n        width: 0,\n        minWidth: 30\n      }\n    },\n    [`& .${inputClasses.root}`]: {\n      paddingBottom: 1,\n      '& .MuiInput-input': {\n        padding: '4px 4px 4px 0px'\n      }\n    },\n    [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n      [`& .${inputClasses.input}`]: {\n        padding: '2px 4px 3px 0'\n      }\n    },\n    [`& .${outlinedInputClasses.root}`]: {\n      padding: 9,\n      [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 26 + 4 + 9\n      },\n      [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 52 + 4 + 9\n      },\n      [`& .${autocompleteClasses.input}`]: {\n        padding: '7.5px 4px 7.5px 5px'\n      },\n      [`& .${autocompleteClasses.endAdornment}`]: {\n        right: 9\n      }\n    },\n    [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n      // Don't specify paddingRight, as it overrides the default value set when there is only\n      // one of the popup or clear icon as the specificity is equal so the latter one wins\n      paddingTop: 6,\n      paddingBottom: 6,\n      paddingLeft: 6,\n      [`& .${autocompleteClasses.input}`]: {\n        padding: '2.5px 4px 2.5px 8px'\n      }\n    },\n    [`& .${filledInputClasses.root}`]: {\n      paddingTop: 19,\n      paddingLeft: 8,\n      [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 26 + 4 + 9\n      },\n      [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 52 + 4 + 9\n      },\n      [`& .${filledInputClasses.input}`]: {\n        padding: '7px 4px'\n      },\n      [`& .${autocompleteClasses.endAdornment}`]: {\n        right: 9\n      }\n    },\n    [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n      paddingBottom: 1,\n      [`& .${filledInputClasses.input}`]: {\n        padding: '2.5px 4px'\n      }\n    },\n    [`& .${inputBaseClasses.hiddenLabel}`]: {\n      paddingTop: 8\n    },\n    [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      [`& .${autocompleteClasses.input}`]: {\n        paddingTop: 16,\n        paddingBottom: 17\n      }\n    },\n    [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n      [`& .${autocompleteClasses.input}`]: {\n        paddingTop: 8,\n        paddingBottom: 9\n      }\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0,\n      ...(ownerState.inputFocused && {\n        opacity: 1\n      })\n    }\n  };\n});\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: (_ref2, styles) => {\n    let {\n      ownerState\n    } = _ref2;\n    return { ...styles.popupIndicator,\n      ...(ownerState.popupOpen && styles.popupIndicatorOpen)\n    };\n  }\n})(_ref3 => {\n  let {\n    ownerState\n  } = _ref3;\n  return {\n    padding: 2,\n    marginRight: -2,\n    ...(ownerState.popupOpen && {\n      transform: 'rotate(180deg)'\n    })\n  };\n});\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(_ref4 => {\n  let {\n    theme,\n    ownerState\n  } = _ref4;\n  return {\n    zIndex: (theme.vars || theme).zIndex.modal,\n    ...(ownerState.disablePortal && {\n      position: 'absolute'\n    })\n  };\n});\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return { ...theme.typography.body1,\n    overflow: 'auto'\n  };\n});\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return {\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0',\n    maxHeight: '40vh',\n    overflow: 'auto',\n    position: 'relative',\n    [`& .${autocompleteClasses.option}`]: {\n      minHeight: 48,\n      display: 'flex',\n      overflow: 'hidden',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 'auto'\n      },\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: (theme.vars || theme).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&[aria-disabled=\"true\"]': {\n        opacity: (theme.vars || theme).palette.action.disabledOpacity,\n        pointerEvents: 'none'\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: (theme.vars || theme).palette.action.focus\n      },\n      '&[aria-selected=\"true\"]': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        [`&.${autocompleteClasses.focused}`]: {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: (theme.vars || theme).palette.action.selected\n          }\n        },\n        [`&.${autocompleteClasses.focusVisible}`]: {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n        }\n      }\n    }\n  };\n});\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(_ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return {\n    backgroundColor: (theme.vars || theme).palette.background.paper,\n    top: -8\n  };\n});\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterOptions,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionDisabled,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open,\n    openOnFocus = false,\n    openText = 'Open',\n    options,\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium',\n    slotProps = {},\n    value: valueProp,\n    ...other\n  } = props;\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete({ ...props,\n    componentName: 'Autocomplete'\n  });\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps(); // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n  const ownerState = { ...props,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => ({\n      className: classes.tag,\n      disabled,\n      ...getTagProps(params)\n    });\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, {\n        label: getOptionLabel(option),\n        size: size,\n        ...getCustomizedTagProps({\n          index\n        }),\n        ...ChipProps\n      }));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", { ...props2,\n    children: getOptionLabel(option)\n  });\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption({ ...optionProps,\n      className: classes.option\n    }, option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    });\n  };\n\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, {\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...getRootProps(other),\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onClick: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          },\n          ...((hasClearIcon || hasPopupIcon) && {\n            endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n              className: classes.endAdornment,\n              ownerState: ownerState,\n              children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, { ...getClearProps(),\n                \"aria-label\": clearText,\n                title: clearText,\n                ownerState: ownerState,\n                ...clearIndicatorSlotProps,\n                className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n                children: clearIcon\n              }) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, { ...getPopupIndicatorProps(),\n                disabled: disabled,\n                \"aria-label\": popupOpen ? closeText : openText,\n                title: popupOpen ? closeText : openText,\n                ownerState: ownerState,\n                ...popupIndicatorSlotProps,\n                className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n                children: popupIcon\n              }) : null]\n            })\n          })\n        },\n        inputProps: {\n          className: classes.input,\n          disabled,\n          readOnly,\n          ...getInputProps()\n        }\n      })\n    }), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen,\n      ...popperSlotProps,\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        ownerState: ownerState,\n        as: PaperComponent,\n        ...paperSlotProps,\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, {\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState,\n          ...getListboxProps(),\n          ...ListboxProps,\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        }) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/material/Autocomplete/Autocomplete.js"],"names":["_ClearIcon","_ArrowDropDownIcon","React","PropTypes","clsx","chainPropTypes","integerPropType","unstable_composeClasses","composeClasses","useAutocomplete","createFilterOptions","alpha","Popper","ListSubheader","Paper","IconButton","Chip","inputClasses","inputBaseClasses","outlinedInputClasses","filledInputClasses","ClearIcon","ArrowDropDownIcon","useThemeProps","styled","autocompleteClasses","getAutocompleteUtilityClass","capitalize","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","disablePortal","expanded","focused","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","popupOpen","size","slots","root","inputRoot","input","tag","endAdornment","clearIndicator","popupIndicator","popper","paper","listbox","loading","noOptions","option","groupLabel","groupUl","AutocompleteRoot","name","slot","overridesResolver","props","styles","visibility","width","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","sizeSmall","right","paddingTop","paddingLeft","hiddenLabel","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","marginRight","AutocompletePopupIndicator","popupIndicatorOpen","transform","AutocompletePopper","popperDisablePortal","theme","zIndex","vars","modal","AutocompletePaper","typography","body1","overflow","AutocompleteLoading","color","palette","text","secondary","AutocompleteNoOptions","AutocompleteListbox","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focusVisible","focus","primary","mainChannel","selectedOpacity","main","hoverOpacity","selected","focusOpacity","AutocompleteGroupLabel","background","AutocompleteGroupUl","Autocomplete","forwardRef","inProps","ref","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","autoComplete","autoHighlight","autoSelect","blurOnSelect","ChipProps","className","clearIcon","fontSize","clearOnBlur","freeSolo","clearOnEscape","clearText","closeText","componentsProps","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabled","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","forcePopupIcon","getLimitTagsText","more","getOptionDisabled","getOptionLabel","_option$label","label","isOptionEqualToValue","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValue","inputValueProp","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","openOnFocus","openText","options","PaperComponent","PopperComponent","popupIcon","readOnly","renderGroup","renderGroupProp","renderInput","renderOption","renderOptionProp","renderTags","selectOnFocus","slotProps","value","valueProp","other","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","dirty","focusedTag","anchorEl","setAnchorEl","groupedOptions","componentName","onMouseDown","handleInputMouseDown","startAdornment","length","getCustomizedTagProps","params","map","index","Array","isArray","splice","push","children","defaultRenderGroup","component","group","key","defaultRenderOption","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","Fragment","undefined","InputLabelProps","InputProps","onClick","event","target","currentTarget","title","inputProps","as","style","clientWidth","role","preventDefault","option2","index2","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","object","string","node","shape","any","Error","join","func","elementType","array","isRequired","sx","arrayOf"],"mappings":"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","sourcesContent":["var _ClearIcon, _ArrowDropDownIcon;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => ({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  },\n  ...(ownerState.fullWidth && {\n    width: '100%'\n  }),\n  [`& .${autocompleteClasses.tag}`]: {\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)',\n    ...(ownerState.size === 'small' && {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    })\n  },\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 5px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 8px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: {\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0,\n    ...(ownerState.inputFocused && {\n      opacity: 1\n    })\n  }\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => ({\n    ...styles.popupIndicator,\n    ...(ownerState.popupOpen && styles.popupIndicatorOpen)\n  })\n})(({\n  ownerState\n}) => ({\n  padding: 2,\n  marginRight: -2,\n  ...(ownerState.popupOpen && {\n    transform: 'rotate(180deg)'\n  })\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.modal,\n  ...(ownerState.disablePortal && {\n    position: 'absolute'\n  })\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterOptions,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionDisabled,\n    getOptionLabel = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open,\n    openOnFocus = false,\n    openText = 'Open',\n    options,\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium',\n    slotProps = {},\n    value: valueProp,\n    ...other\n  } = props;\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete({\n    ...props,\n    componentName: 'Autocomplete'\n  });\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = {\n    ...props,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => ({\n      className: classes.tag,\n      disabled,\n      ...getTagProps(params)\n    });\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, {\n        label: getOptionLabel(option),\n        size: size,\n        ...getCustomizedTagProps({\n          index\n        }),\n        ...ChipProps\n      }));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", {\n    ...props2,\n    children: getOptionLabel(option)\n  });\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption({\n      ...optionProps,\n      className: classes.option\n    }, option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    });\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, {\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...getRootProps(other),\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onClick: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          },\n          ...((hasClearIcon || hasPopupIcon) && {\n            endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n              className: classes.endAdornment,\n              ownerState: ownerState,\n              children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, {\n                ...getClearProps(),\n                \"aria-label\": clearText,\n                title: clearText,\n                ownerState: ownerState,\n                ...clearIndicatorSlotProps,\n                className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n                children: clearIcon\n              }) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, {\n                ...getPopupIndicatorProps(),\n                disabled: disabled,\n                \"aria-label\": popupOpen ? closeText : openText,\n                title: popupOpen ? closeText : openText,\n                ownerState: ownerState,\n                ...popupIndicatorSlotProps,\n                className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n                children: popupIcon\n              }) : null]\n            })\n          })\n        },\n        inputProps: {\n          className: classes.input,\n          disabled,\n          readOnly,\n          ...getInputProps()\n        }\n      })\n    }), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen,\n      ...popperSlotProps,\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        ownerState: ownerState,\n        as: PaperComponent,\n        ...paperSlotProps,\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, {\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState,\n          ...getListboxProps(),\n          ...ListboxProps,\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        }) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}