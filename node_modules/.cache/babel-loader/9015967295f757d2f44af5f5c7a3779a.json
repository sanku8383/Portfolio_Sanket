{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getAccordionActionsUtilityClass } from './accordionActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getAccordionActionsUtilityClass, classes);\n};\n\nconst AccordionActionsRoot = styled('div', {\n  name: 'MuiAccordionActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(_ref => {\n  let {\n    ownerState\n  } = _ref;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    ...(!ownerState.disableSpacing && {\n      '& > :not(:first-of-type)': {\n        marginLeft: 8\n      }\n    })\n  };\n});\nconst AccordionActions = /*#__PURE__*/React.forwardRef(function AccordionActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionActions'\n  });\n  const {\n    className,\n    disableSpacing = false,\n    ...other\n  } = props;\n  const ownerState = { ...props,\n    disableSpacing\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionActionsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionActions;","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/material/AccordionActions/AccordionActions.js"],"names":["React","PropTypes","clsx","unstable_composeClasses","composeClasses","styled","useThemeProps","getAccordionActionsUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","disableSpacing","slots","root","AccordionActionsRoot","name","slot","overridesResolver","props","styles","spacing","display","alignItems","padding","justifyContent","marginLeft","AccordionActions","forwardRef","inProps","ref","className","other","process","env","NODE_ENV","propTypes","children","node","object","string","bool","sx","oneOfType","arrayOf","func"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getAccordionActionsUtilityClass } from './accordionActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getAccordionActionsUtilityClass, classes);\n};\nconst AccordionActionsRoot = styled('div', {\n  name: 'MuiAccordionActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  ...(!ownerState.disableSpacing && {\n    '& > :not(:first-of-type)': {\n      marginLeft: 8\n    }\n  })\n}));\nconst AccordionActions = /*#__PURE__*/React.forwardRef(function AccordionActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionActions'\n  });\n  const {\n    className,\n    disableSpacing = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    disableSpacing\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionActionsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionActions;"]},"metadata":{},"sourceType":"module"}