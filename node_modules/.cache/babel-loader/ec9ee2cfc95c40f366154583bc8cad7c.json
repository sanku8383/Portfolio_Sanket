{"ast":null,"code":"import { deepmerge } from '@mui/utils';\nimport { private_safeColorChannel as safeColorChannel, private_safeAlpha as safeAlpha, private_safeDarken as safeDarken, private_safeLighten as safeLighten, private_safeEmphasize as safeEmphasize, unstable_createGetCssVar as systemCreateGetCssVar, unstable_defaultSxConfig as defaultSxConfig, unstable_styleFunctionSx as styleFunctionSx, unstable_prepareCssVars as prepareCssVars } from '@mui/system';\nimport defaultShouldSkipGeneratingVar from './shouldSkipGeneratingVar';\nimport createThemeWithoutVars from './createTheme';\nimport getOverlayAlpha from './getOverlayAlpha';\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n\n  const overlay = getOverlayAlpha(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\n\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\n\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\n\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = safeColorChannel(obj[key], `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, e.g. \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\n\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {// ignore error\n  }\n\n  return undefined;\n};\n\nexport const createGetCssVar = function () {\n  let cssVarPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'mui';\n  return systemCreateGetCssVar(cssVarPrefix);\n};\nexport default function extendTheme() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n\n  const {\n    colorSchemes: colorSchemesInput = {},\n    cssVarPrefix = 'mui',\n    shouldSkipGeneratingVar = defaultShouldSkipGeneratingVar,\n    ...input\n  } = options;\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const {\n    palette: lightPalette,\n    ...muiTheme\n  } = createThemeWithoutVars({ ...input,\n    ...(colorSchemesInput.light && {\n      palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n    })\n  });\n  const {\n    palette: darkPalette\n  } = createThemeWithoutVars({\n    palette: {\n      mode: 'dark',\n      ...((_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n    }\n  });\n  let theme = { ...muiTheme,\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: { ...colorSchemesInput,\n      light: { ...colorSchemesInput.light,\n        palette: lightPalette,\n        opacity: {\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38,\n          ...((_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity)\n        },\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      },\n      dark: { ...colorSchemesInput.dark,\n        palette: darkPalette,\n        opacity: {\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3,\n          ...((_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity)\n        },\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      }\n    }\n  };\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n\n    const setCssVarColor = cssVar => {\n      const tokens = cssVar.split('-');\n      const color = tokens[1];\n      const colorToken = tokens[2];\n      return getCssVar(cssVar, palette[color][colorToken]);\n    }; // attach black & white channels to common node\n\n\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    } // assign component variables\n\n\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Button', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', safeDarken(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeDarken(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeDarken(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeDarken(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => lightPalette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => lightPalette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => lightPalette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => lightPalette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', safeLighten(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeLighten(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeLighten(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeLighten(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-400'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-300'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-A100'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', safeLighten(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', safeLighten(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', safeLighten(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', safeLighten(palette.warning.main, 0.62));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => lightPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', safeLighten(safeAlpha(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', safeLighten(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeLighten(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeLighten(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeLighten(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => darkPalette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => darkPalette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => darkPalette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => darkPalette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', safeDarken(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeDarken(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeDarken(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeDarken(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', setCssVarColor('palette-background-paper')); // specific for dark mode\n\n      setColor(palette.AppBar, 'darkColor', setCssVarColor('palette-text-primary')); // specific for dark mode\n\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-600'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-800'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', safeDarken(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', safeDarken(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', safeDarken(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', safeDarken(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', safeDarken(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', safeDarken(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', safeDarken(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', safeDarken(palette.warning.main, 0.5));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => darkPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeDarken(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeDarken(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', safeDarken(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', safeDarken(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', safeDarken(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', safeDarken(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', safeDarken(safeAlpha(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    } // MUI X - DataGrid needs this token.\n\n\n    setColorChannel(palette.background, 'default');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', safeColorChannel(colors.main));\n        }\n\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', safeColorChannel(colors.light));\n        }\n\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', safeColorChannel(colors.dark));\n        }\n\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', safeColorChannel(colors.contrastText));\n        }\n\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  const parserConfig = {\n    prefix: cssVarPrefix,\n    shouldSkipGeneratingVar\n  };\n  const {\n    vars: themeVars,\n    generateCssVars\n  } = prepareCssVars(theme, parserConfig);\n  theme.vars = themeVars;\n  theme.generateCssVars = generateCssVars;\n  theme.shouldSkipGeneratingVar = shouldSkipGeneratingVar;\n  theme.unstable_sxConfig = { ...defaultSxConfig,\n    ...(input == null ? void 0 : input.unstable_sxConfig)\n  };\n\n  theme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n\n  return theme;\n}","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/material/styles/experimental_extendTheme.js"],"names":["deepmerge","private_safeColorChannel","safeColorChannel","private_safeAlpha","safeAlpha","private_safeDarken","safeDarken","private_safeLighten","safeLighten","private_safeEmphasize","safeEmphasize","unstable_createGetCssVar","systemCreateGetCssVar","unstable_defaultSxConfig","defaultSxConfig","unstable_styleFunctionSx","styleFunctionSx","unstable_prepareCssVars","prepareCssVars","defaultShouldSkipGeneratingVar","createThemeWithoutVars","getOverlayAlpha","defaultDarkOverlays","Array","map","_","index","undefined","overlay","assignNode","obj","keys","forEach","k","setColor","key","defaultValue","setColorChannel","silent","fn","error","createGetCssVar","cssVarPrefix","extendTheme","options","_colorSchemesInput$li","_colorSchemesInput$da","_colorSchemesInput$li2","_colorSchemesInput$li3","_colorSchemesInput$da2","_colorSchemesInput$da3","colorSchemes","colorSchemesInput","shouldSkipGeneratingVar","input","getCssVar","palette","lightPalette","muiTheme","light","darkPalette","mode","dark","theme","opacity","inputPlaceholder","inputUnderline","switchTrackDisabled","switchTrack","overlays","Object","setCssVarColor","cssVar","tokens","split","color","colorToken","common","Alert","info","success","warning","getContrastText","main","AppBar","Avatar","Button","Chip","FilledInput","LinearProgress","primary","secondary","Skeleton","Slider","snackbarContentBackground","background","default","SnackbarContent","SpeedDialAction","paper","StepConnector","StepContent","Switch","TableCell","divider","Tooltip","grey","colors","contrastText","active","selected","args","reduce","acc","argument","parserConfig","prefix","vars","themeVars","generateCssVars","unstable_sxConfig","unstable_sx","sx","props"],"mappings":"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","sourcesContent":["import { deepmerge } from '@mui/utils';\nimport { private_safeColorChannel as safeColorChannel, private_safeAlpha as safeAlpha, private_safeDarken as safeDarken, private_safeLighten as safeLighten, private_safeEmphasize as safeEmphasize, unstable_createGetCssVar as systemCreateGetCssVar, unstable_defaultSxConfig as defaultSxConfig, unstable_styleFunctionSx as styleFunctionSx, unstable_prepareCssVars as prepareCssVars } from '@mui/system';\nimport defaultShouldSkipGeneratingVar from './shouldSkipGeneratingVar';\nimport createThemeWithoutVars from './createTheme';\nimport getOverlayAlpha from './getOverlayAlpha';\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n  const overlay = getOverlayAlpha(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = safeColorChannel(obj[key], `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, e.g. \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {\n    // ignore error\n  }\n  return undefined;\n};\nexport const createGetCssVar = (cssVarPrefix = 'mui') => systemCreateGetCssVar(cssVarPrefix);\nexport default function extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n  const {\n    colorSchemes: colorSchemesInput = {},\n    cssVarPrefix = 'mui',\n    shouldSkipGeneratingVar = defaultShouldSkipGeneratingVar,\n    ...input\n  } = options;\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const {\n    palette: lightPalette,\n    ...muiTheme\n  } = createThemeWithoutVars({\n    ...input,\n    ...(colorSchemesInput.light && {\n      palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n    })\n  });\n  const {\n    palette: darkPalette\n  } = createThemeWithoutVars({\n    palette: {\n      mode: 'dark',\n      ...((_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n    }\n  });\n  let theme = {\n    ...muiTheme,\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: {\n      ...colorSchemesInput,\n      light: {\n        ...colorSchemesInput.light,\n        palette: lightPalette,\n        opacity: {\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38,\n          ...((_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity)\n        },\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      },\n      dark: {\n        ...colorSchemesInput.dark,\n        palette: darkPalette,\n        opacity: {\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3,\n          ...((_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity)\n        },\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      }\n    }\n  };\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n    const setCssVarColor = cssVar => {\n      const tokens = cssVar.split('-');\n      const color = tokens[1];\n      const colorToken = tokens[2];\n      return getCssVar(cssVar, palette[color][colorToken]);\n    };\n\n    // attach black & white channels to common node\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    }\n\n    // assign component variables\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Button', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', safeDarken(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeDarken(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeDarken(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeDarken(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => lightPalette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => lightPalette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => lightPalette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => lightPalette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', safeLighten(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeLighten(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeLighten(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeLighten(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-400'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-300'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-A100'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', safeLighten(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', safeLighten(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', safeLighten(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', safeLighten(palette.warning.main, 0.62));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => lightPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', safeLighten(safeAlpha(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', safeLighten(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeLighten(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeLighten(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeLighten(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => darkPalette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => darkPalette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => darkPalette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => darkPalette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', safeDarken(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeDarken(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeDarken(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeDarken(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', setCssVarColor('palette-background-paper')); // specific for dark mode\n      setColor(palette.AppBar, 'darkColor', setCssVarColor('palette-text-primary')); // specific for dark mode\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-600'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-800'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', safeDarken(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', safeDarken(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', safeDarken(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', safeDarken(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', safeDarken(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', safeDarken(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', safeDarken(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', safeDarken(palette.warning.main, 0.5));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => darkPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeDarken(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeDarken(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', safeDarken(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', safeDarken(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', safeDarken(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', safeDarken(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', safeDarken(safeAlpha(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    }\n\n    // MUI X - DataGrid needs this token.\n    setColorChannel(palette.background, 'default');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color];\n\n      // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', safeColorChannel(colors.main));\n        }\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', safeColorChannel(colors.light));\n        }\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', safeColorChannel(colors.dark));\n        }\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', safeColorChannel(colors.contrastText));\n        }\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  const parserConfig = {\n    prefix: cssVarPrefix,\n    shouldSkipGeneratingVar\n  };\n  const {\n    vars: themeVars,\n    generateCssVars\n  } = prepareCssVars(theme, parserConfig);\n  theme.vars = themeVars;\n  theme.generateCssVars = generateCssVars;\n  theme.shouldSkipGeneratingVar = shouldSkipGeneratingVar;\n  theme.unstable_sxConfig = {\n    ...defaultSxConfig,\n    ...(input == null ? void 0 : input.unstable_sxConfig)\n  };\n  theme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n  return theme;\n}"]},"metadata":{},"sourceType":"module"}