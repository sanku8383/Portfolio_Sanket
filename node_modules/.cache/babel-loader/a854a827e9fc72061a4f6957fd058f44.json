{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n    theme: themeInput,\n    ...props\n  } = _ref;\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, { ...props,\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;","map":{"version":3,"sources":["C:/React/Portfolio/Portfolio-Youtube/node_modules/@mui/material/styles/ThemeProvider.js"],"names":["React","PropTypes","ThemeProvider","SystemThemeProvider","THEME_ID","jsx","_jsx","theme","themeInput","props","scopedTheme","themeId","undefined","process","env","NODE_ENV","propTypes","children","node","oneOfType","object","func","isRequired"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAa,IAAIC,mBAA1B,QAAqD,aAArD;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,eAAe,SAASJ,aAAT,OAGZ;AAAA,MAHmC;AACpCK,IAAAA,KAAK,EAAEC,UAD6B;AAEpC,OAAGC;AAFiC,GAGnC;AACD,QAAMC,WAAW,GAAGF,UAAU,CAACJ,QAAD,CAA9B;AACA,SAAO,aAAaE,IAAI,CAACH,mBAAD,EAAsB,EAC5C,GAAGM,KADyC;AAE5CE,IAAAA,OAAO,EAAED,WAAW,GAAGN,QAAH,GAAcQ,SAFU;AAG5CL,IAAAA,KAAK,EAAEG,WAAW,IAAIF;AAHsB,GAAtB,CAAxB;AAKD;AACDK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,aAAa,CAACc,SAAd,GAA0B;AAChE;AACF;AACA;AACEC,EAAAA,QAAQ,EAAEhB,SAAS,CAACiB,IAJ4C;;AAKhE;AACF;AACA;AACEX,EAAAA,KAAK,EAAEN,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,MAAX,EAAmBnB,SAAS,CAACoB,IAA7B,CAApB,EAAwDC;AARC,CAAlE,GASI,KAAK,CATT","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider({\n  theme: themeInput,\n  ...props\n}) {\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\n    ...props,\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;"]},"metadata":{},"sourceType":"module"}